// Mocks generated by Mockito 5.4.0 from annotations
// in atba_application/test/features/feature_bill/presentation/block/bill_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:atba_application/core/general/general_response_entity.dart'
    as _i8;
import 'package:atba_application/core/params/bargh_bill_inquiry_param.dart'
    as _i15;
import 'package:atba_application/core/params/create_bill_param.dart' as _i9;
import 'package:atba_application/core/params/fixline_bill_inquiry_param.dart'
    as _i24;
import 'package:atba_application/core/params/fixmobile_bill_inquiry_param.dart'
    as _i27;
import 'package:atba_application/core/params/gas_bill_inquiry_param.dart'
    as _i21;
import 'package:atba_application/core/params/update_bill_param.dart' as _i11;
import 'package:atba_application/core/params/water_bill_inquiry_param.dart'
    as _i18;
import 'package:atba_application/core/resources/data_state.dart' as _i3;
import 'package:atba_application/features/feature_bill/domain/entities/bargh_bill_inquiry_entity.dart'
    as _i14;
import 'package:atba_application/features/feature_bill/domain/entities/fixline_bill_inquiry_entity.dart'
    as _i23;
import 'package:atba_application/features/feature_bill/domain/entities/gas_bill_inquiry_entity.dart'
    as _i20;
import 'package:atba_application/features/feature_bill/domain/entities/get_balance_entity_bill.dart'
    as _i35;
import 'package:atba_application/features/feature_bill/domain/entities/get_bills_entity.dart'
    as _i6;
import 'package:atba_application/features/feature_bill/domain/entities/mci_bill_inquiry_entity.dart'
    as _i26;
import 'package:atba_application/features/feature_bill/domain/entities/mtn_bill_inquiry_entity.dart'
    as _i29;
import 'package:atba_application/features/feature_bill/domain/entities/payment_from_wallet_entity.dart'
    as _i33;
import 'package:atba_application/features/feature_bill/domain/entities/rightel_bill_inquiry_entity.dart'
    as _i31;
import 'package:atba_application/features/feature_bill/domain/entities/water_bill_inquiry_entity.dart'
    as _i17;
import 'package:atba_application/features/feature_bill/domain/repository/bill_repository.dart'
    as _i2;
import 'package:atba_application/features/feature_bill/domain/use_cases/bargh_bill_inquiry_usecase.dart'
    as _i13;
import 'package:atba_application/features/feature_bill/domain/use_cases/create_bill_usecase.dart'
    as _i7;
import 'package:atba_application/features/feature_bill/domain/use_cases/delete_bill_usecase.dart'
    as _i12;
import 'package:atba_application/features/feature_bill/domain/use_cases/fixline_bill_inquiry_usecase.dart'
    as _i22;
import 'package:atba_application/features/feature_bill/domain/use_cases/gas_bill_inquiry_usecase.dart'
    as _i19;
import 'package:atba_application/features/feature_bill/domain/use_cases/get_balance_usecase.dart'
    as _i34;
import 'package:atba_application/features/feature_bill/domain/use_cases/get_bills_usecase.dart'
    as _i4;
import 'package:atba_application/features/feature_bill/domain/use_cases/mci_bill_inquiry_usecase.dart'
    as _i25;
import 'package:atba_application/features/feature_bill/domain/use_cases/mtn_bill_inquiry_usecase.dart'
    as _i28;
import 'package:atba_application/features/feature_bill/domain/use_cases/payment_from_wallet_bill_usecase.dart'
    as _i32;
import 'package:atba_application/features/feature_bill/domain/use_cases/rightel_bill_inquiry_usecase.dart'
    as _i30;
import 'package:atba_application/features/feature_bill/domain/use_cases/update_bill_usecase.dart'
    as _i10;
import 'package:atba_application/features/feature_bill/domain/use_cases/water_bill_inquiry_usecase.dart'
    as _i16;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeBillRepository_0 extends _i1.SmartFake
    implements _i2.BillRepository {
  _FakeBillRepository_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDataState_1<T> extends _i1.SmartFake implements _i3.DataState<T> {
  _FakeDataState_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [GetBillsUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetBillsUseCase extends _i1.Mock implements _i4.GetBillsUseCase {
  MockGetBillsUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.BillRepository get billRepository => (super.noSuchMethod(
        Invocation.getter(#billRepository),
        returnValue: _FakeBillRepository_0(
          this,
          Invocation.getter(#billRepository),
        ),
      ) as _i2.BillRepository);
  @override
  _i5.Future<_i3.DataState<_i6.GetBillsEntity>> call(String? Void) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [Void],
        ),
        returnValue: _i5.Future<_i3.DataState<_i6.GetBillsEntity>>.value(
            _FakeDataState_1<_i6.GetBillsEntity>(
          this,
          Invocation.method(
            #call,
            [Void],
          ),
        )),
      ) as _i5.Future<_i3.DataState<_i6.GetBillsEntity>>);
}

/// A class which mocks [CreateBillUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockCreateBillUseCase extends _i1.Mock implements _i7.CreateBillUseCase {
  MockCreateBillUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.BillRepository get billRepository => (super.noSuchMethod(
        Invocation.getter(#billRepository),
        returnValue: _FakeBillRepository_0(
          this,
          Invocation.getter(#billRepository),
        ),
      ) as _i2.BillRepository);
  @override
  _i5.Future<_i3.DataState<_i8.GeneralResponseEntity>> call(
          _i9.CreateBillParam? createBillParam) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [createBillParam],
        ),
        returnValue: _i5.Future<_i3.DataState<_i8.GeneralResponseEntity>>.value(
            _FakeDataState_1<_i8.GeneralResponseEntity>(
          this,
          Invocation.method(
            #call,
            [createBillParam],
          ),
        )),
      ) as _i5.Future<_i3.DataState<_i8.GeneralResponseEntity>>);
}

/// A class which mocks [UpdateBillUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockUpdateBillUseCase extends _i1.Mock implements _i10.UpdateBillUseCase {
  MockUpdateBillUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.BillRepository get billRepository => (super.noSuchMethod(
        Invocation.getter(#billRepository),
        returnValue: _FakeBillRepository_0(
          this,
          Invocation.getter(#billRepository),
        ),
      ) as _i2.BillRepository);
  @override
  _i5.Future<_i3.DataState<_i8.GeneralResponseEntity>> call(
          _i11.UpdateBillParam? updateBillParam) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [updateBillParam],
        ),
        returnValue: _i5.Future<_i3.DataState<_i8.GeneralResponseEntity>>.value(
            _FakeDataState_1<_i8.GeneralResponseEntity>(
          this,
          Invocation.method(
            #call,
            [updateBillParam],
          ),
        )),
      ) as _i5.Future<_i3.DataState<_i8.GeneralResponseEntity>>);
}

/// A class which mocks [DeleteBillUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockDeleteBillUseCase extends _i1.Mock implements _i12.DeleteBillUseCase {
  MockDeleteBillUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.BillRepository get billRepository => (super.noSuchMethod(
        Invocation.getter(#billRepository),
        returnValue: _FakeBillRepository_0(
          this,
          Invocation.getter(#billRepository),
        ),
      ) as _i2.BillRepository);
  @override
  _i5.Future<_i3.DataState<_i8.GeneralResponseEntity>> call(String? billId) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [billId],
        ),
        returnValue: _i5.Future<_i3.DataState<_i8.GeneralResponseEntity>>.value(
            _FakeDataState_1<_i8.GeneralResponseEntity>(
          this,
          Invocation.method(
            #call,
            [billId],
          ),
        )),
      ) as _i5.Future<_i3.DataState<_i8.GeneralResponseEntity>>);
}

/// A class which mocks [BarghBillInquiryUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockBarghBillInquiryUseCase extends _i1.Mock
    implements _i13.BarghBillInquiryUseCase {
  MockBarghBillInquiryUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.BillRepository get billRepository => (super.noSuchMethod(
        Invocation.getter(#billRepository),
        returnValue: _FakeBillRepository_0(
          this,
          Invocation.getter(#billRepository),
        ),
      ) as _i2.BillRepository);
  @override
  _i5.Future<_i3.DataState<_i14.BarghBillInquiryEntity>> call(
          _i15.BarghBillInquiryParam? barghBillInquiryParam) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [barghBillInquiryParam],
        ),
        returnValue:
            _i5.Future<_i3.DataState<_i14.BarghBillInquiryEntity>>.value(
                _FakeDataState_1<_i14.BarghBillInquiryEntity>(
          this,
          Invocation.method(
            #call,
            [barghBillInquiryParam],
          ),
        )),
      ) as _i5.Future<_i3.DataState<_i14.BarghBillInquiryEntity>>);
}

/// A class which mocks [WaterBillInquiryUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockWaterBillInquiryUseCase extends _i1.Mock
    implements _i16.WaterBillInquiryUseCase {
  MockWaterBillInquiryUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.BillRepository get billRepository => (super.noSuchMethod(
        Invocation.getter(#billRepository),
        returnValue: _FakeBillRepository_0(
          this,
          Invocation.getter(#billRepository),
        ),
      ) as _i2.BillRepository);
  @override
  _i5.Future<_i3.DataState<_i17.WaterBillInquiryEntity>> call(
          _i18.WaterBillInquiryParam? waterBillInquiryParam) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [waterBillInquiryParam],
        ),
        returnValue:
            _i5.Future<_i3.DataState<_i17.WaterBillInquiryEntity>>.value(
                _FakeDataState_1<_i17.WaterBillInquiryEntity>(
          this,
          Invocation.method(
            #call,
            [waterBillInquiryParam],
          ),
        )),
      ) as _i5.Future<_i3.DataState<_i17.WaterBillInquiryEntity>>);
}

/// A class which mocks [GasBillInquiryUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGasBillInquiryUseCase extends _i1.Mock
    implements _i19.GasBillInquiryUseCase {
  MockGasBillInquiryUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.BillRepository get billRepository => (super.noSuchMethod(
        Invocation.getter(#billRepository),
        returnValue: _FakeBillRepository_0(
          this,
          Invocation.getter(#billRepository),
        ),
      ) as _i2.BillRepository);
  @override
  _i5.Future<_i3.DataState<_i20.GasBillInquiryEntity>> call(
          _i21.GasBillInquiryParam? gasBillInquiryParam) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [gasBillInquiryParam],
        ),
        returnValue: _i5.Future<_i3.DataState<_i20.GasBillInquiryEntity>>.value(
            _FakeDataState_1<_i20.GasBillInquiryEntity>(
          this,
          Invocation.method(
            #call,
            [gasBillInquiryParam],
          ),
        )),
      ) as _i5.Future<_i3.DataState<_i20.GasBillInquiryEntity>>);
}

/// A class which mocks [FixLineBillInquiryUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockFixLineBillInquiryUseCase extends _i1.Mock
    implements _i22.FixLineBillInquiryUseCase {
  MockFixLineBillInquiryUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.BillRepository get billRepository => (super.noSuchMethod(
        Invocation.getter(#billRepository),
        returnValue: _FakeBillRepository_0(
          this,
          Invocation.getter(#billRepository),
        ),
      ) as _i2.BillRepository);
  @override
  _i5.Future<_i3.DataState<_i23.FixLineBillInquiryEntity>> call(
          _i24.FixLineBillInquiryParam? fixLineBillInquiryParam) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [fixLineBillInquiryParam],
        ),
        returnValue:
            _i5.Future<_i3.DataState<_i23.FixLineBillInquiryEntity>>.value(
                _FakeDataState_1<_i23.FixLineBillInquiryEntity>(
          this,
          Invocation.method(
            #call,
            [fixLineBillInquiryParam],
          ),
        )),
      ) as _i5.Future<_i3.DataState<_i23.FixLineBillInquiryEntity>>);
}

/// A class which mocks [MciBillInquiryUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockMciBillInquiryUseCase extends _i1.Mock
    implements _i25.MciBillInquiryUseCase {
  MockMciBillInquiryUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.BillRepository get billRepository => (super.noSuchMethod(
        Invocation.getter(#billRepository),
        returnValue: _FakeBillRepository_0(
          this,
          Invocation.getter(#billRepository),
        ),
      ) as _i2.BillRepository);
  @override
  _i5.Future<_i3.DataState<_i26.MciBillInquiryEntity>> call(
          _i27.FixMobileBillInquiryParam? fixMobileBillInquiryParam) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [fixMobileBillInquiryParam],
        ),
        returnValue: _i5.Future<_i3.DataState<_i26.MciBillInquiryEntity>>.value(
            _FakeDataState_1<_i26.MciBillInquiryEntity>(
          this,
          Invocation.method(
            #call,
            [fixMobileBillInquiryParam],
          ),
        )),
      ) as _i5.Future<_i3.DataState<_i26.MciBillInquiryEntity>>);
}

/// A class which mocks [MtnBillInquiryUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockMtnBillInquiryUseCase extends _i1.Mock
    implements _i28.MtnBillInquiryUseCase {
  MockMtnBillInquiryUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.BillRepository get billRepository => (super.noSuchMethod(
        Invocation.getter(#billRepository),
        returnValue: _FakeBillRepository_0(
          this,
          Invocation.getter(#billRepository),
        ),
      ) as _i2.BillRepository);
  @override
  _i5.Future<_i3.DataState<_i29.MtnBillInquiryEntity>> call(
          _i27.FixMobileBillInquiryParam? fixMobileBillInquiryParam) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [fixMobileBillInquiryParam],
        ),
        returnValue: _i5.Future<_i3.DataState<_i29.MtnBillInquiryEntity>>.value(
            _FakeDataState_1<_i29.MtnBillInquiryEntity>(
          this,
          Invocation.method(
            #call,
            [fixMobileBillInquiryParam],
          ),
        )),
      ) as _i5.Future<_i3.DataState<_i29.MtnBillInquiryEntity>>);
}

/// A class which mocks [RightelBillInquiryUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockRightelBillInquiryUseCase extends _i1.Mock
    implements _i30.RightelBillInquiryUseCase {
  MockRightelBillInquiryUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.BillRepository get billRepository => (super.noSuchMethod(
        Invocation.getter(#billRepository),
        returnValue: _FakeBillRepository_0(
          this,
          Invocation.getter(#billRepository),
        ),
      ) as _i2.BillRepository);
  @override
  _i5.Future<_i3.DataState<_i31.RightelBillInquiryEntity>> call(
          _i27.FixMobileBillInquiryParam? fixMobileBillInquiryParam) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [fixMobileBillInquiryParam],
        ),
        returnValue:
            _i5.Future<_i3.DataState<_i31.RightelBillInquiryEntity>>.value(
                _FakeDataState_1<_i31.RightelBillInquiryEntity>(
          this,
          Invocation.method(
            #call,
            [fixMobileBillInquiryParam],
          ),
        )),
      ) as _i5.Future<_i3.DataState<_i31.RightelBillInquiryEntity>>);
}

/// A class which mocks [PaymentFromWalletBillUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockPaymentFromWalletBillUseCase extends _i1.Mock
    implements _i32.PaymentFromWalletBillUseCase {
  MockPaymentFromWalletBillUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.BillRepository get billRepository => (super.noSuchMethod(
        Invocation.getter(#billRepository),
        returnValue: _FakeBillRepository_0(
          this,
          Invocation.getter(#billRepository),
        ),
      ) as _i2.BillRepository);
  @override
  _i5.Future<_i3.DataState<_i33.PaymentFromWalletEntity>> call(
          String? myRequestBody) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [myRequestBody],
        ),
        returnValue:
            _i5.Future<_i3.DataState<_i33.PaymentFromWalletEntity>>.value(
                _FakeDataState_1<_i33.PaymentFromWalletEntity>(
          this,
          Invocation.method(
            #call,
            [myRequestBody],
          ),
        )),
      ) as _i5.Future<_i3.DataState<_i33.PaymentFromWalletEntity>>);
}

/// A class which mocks [GetBalanceUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetBalanceUseCase extends _i1.Mock implements _i34.GetBalanceUseCase {
  MockGetBalanceUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.BillRepository get billRepository => (super.noSuchMethod(
        Invocation.getter(#billRepository),
        returnValue: _FakeBillRepository_0(
          this,
          Invocation.getter(#billRepository),
        ),
      ) as _i2.BillRepository);
  @override
  _i5.Future<_i3.DataState<_i35.GetBalanceEntity>> call(String? Void) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [Void],
        ),
        returnValue: _i5.Future<_i3.DataState<_i35.GetBalanceEntity>>.value(
            _FakeDataState_1<_i35.GetBalanceEntity>(
          this,
          Invocation.method(
            #call,
            [Void],
          ),
        )),
      ) as _i5.Future<_i3.DataState<_i35.GetBalanceEntity>>);
}
